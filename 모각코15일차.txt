[챗봇에게 말을 가르치고 배우는 법]
json파일을 이용한 파싱과 데이터 이용법

-JSON(JavaScript Object Notation)
자바스크립트의 객체 문법. 
구조화된 데이터로 제이슨을 표현하기 위해 텍스트 형태로 저장하는 포맷. 
보통 서버와 웹 클라이언트 사이에서 데이터를 주고받을 때 사용.

-활용법.
다양하고 많은 질문을 직접 선언하지 않고도 사용하기.
웹클라이언트에 모든 내용을 저장할 수 없기 때문.

여긴 서버가 없으므로, 변수를 통해 직접 선언하기.
var json = 
[
	{
		"question" : "안녕!",
		"answer" : "안냥!"
	},
	{
		"question" : "나이?",
		"answer" : "비밀이다 냥!"
	},
	{
		"question" : "이름?",
		"answer" : "코묘~~!"
	}
]

function text_check(){
	var value = document.getElementById("console").value; //사용자 입력값
	var reply = document.getElementById("cat_console");

	for(let i = 0; i < json.length; i++){
		/*
			length는 배열(json) 길이 확인 함수입니다.
			위의 반복문은 json 데이터의 처음부터 끝까지 모두 확인하겠죠?
		*/
		if(value == json[i].question){ //만약 입력값이 json에 있는 question 데이터와 일치하면
			reply.innerHTML = json[i].answer; //챗봇의 대답을 json의 answer로 출력해라
			return; //함수 탈출
		}
	}
	(말 배우기 코드)
}


-말을 배울 수 있는 코드
var question = ""; //사용자의 질문을 임시 저장할 변수
var answer = ""; //사용자의 대답을 임시 저장할 변수

var key = 0; // 키 값을 이용하여 말을 배우는 상황인지 아닌지 판별합니다.

function text_check(){
	var value = document.getElementById("console").value;
	var reply = document.getElementById("cat_console");

	for(let i = 0; i < json.length; i++){
		if(value == json[i].question){
			reply.innerHTML = json[i].answer;
			return;
		}
	}
	
	reply.innerHTML = "말을 가르쳐 주실래요?(네 or 아니요)";
	question = value; //사용자의 질문을 미리 저장
	key = 1; //조건문으로 진입하게 만들 키 값 변경
}


-심화
​function text_check(){
	var value = document.getElementById("console").value;
	var reply = document.getElementById("cat_console");

	if(key == 1){ //key 값이 1인 경우, 사용자의 선택 유도
		if(value == "네"){
			reply.innerHTML = "대답을 입력해주세요!";
			key = 2; //key 값을 2로 만들어, 대답을 입력받는 조건으로 변경
		}
		else{
			reply.innerHTML = "냐~!";
			key = 0; // key값을 다시 0으로 변경하여 상태 변경
		}
		return;
	}

	for(let i = 0; i < json.length; i++){
		if(value == json[i].question){
			reply.innerHTML = json[i].answer;
			return;
		}
	}
	
	reply.innerHTML = "말을 가르쳐 주실래요?(네 or 아니요)";
	question = value;
	key = 1;
}
새로운 전역변수 question을 만들고, 사용자가 말을 가르쳐줄 것인지 선택하게 만든 후
​
function text_check(){
	var value = document.getElementById("console").value;
	var reply = document.getElementById("cat_console");

	if(key == 1){
		if(value == "네"){
			reply.innerHTML = "대답을 입력해주세요!";
			key = 2;
		}
		else{
			reply.innerHTML = "냐~!";
			key = 0;
		}
		return;
	}

	if(key == 2){
		answer = value; //전역변수 answer값에 사용자의 입력을 저장
		push_json(); //json 데이터에 값을 추가하는 함수 (추후 생성)
	}

	for(let i = 0; i < json.length; i++){
		if(value == json[i].question){
			reply.innerHTML = json[i].answer;
			return;
		}
	}
	
	reply.innerHTML = "말을 가르쳐 주실래요?(네 or 아니요)";
	question = value;
	key = 1;
}

-값 추가 기능
function push_json(){
	json.push({question: `${question}`, answer: `${answer}`); //json이라는 데이터에 값을 추가하는 push함수
	document.getElementById("cat_console").innerHTML = "말을 배웠다 냥!";
	key = 0; //키 값 0으로 초기화
}

-push 함수
배열 혹은 제이슨 형태의 데이터에 값을 추가하는 함수.
name : value 형태.
`\{변수}`는 문자열에 변수값을 넣기 위해 사용하는 문법.
